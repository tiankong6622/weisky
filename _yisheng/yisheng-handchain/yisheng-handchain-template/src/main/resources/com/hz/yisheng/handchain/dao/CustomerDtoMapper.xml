<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.hz.yisheng.handchain.dao.CustomerDtoMapper">
	<resultMap type="com.hz.yisheng.handchain.dto.CustomerDto" id="CUSTOMERDTO_RESULT">
		<id property="id" column="id"/>
		<result property="name" column="name"/>
		<result property="sex" column="sex"/>
		<result property="phone" column="phone"/>
		<result property="address" column="address"/>
		<result property="weight" column="weight"/>
		<result property="bornTime" column="born_time"/>
		<result property="parentId" column="parent_id"/>
		<result property="deviceNumber" column="deviceNumber"/>
		<result property="bloodType" column="blood_type"/>
		<result property="bloodPre" column="blood_pre"/>
		<result property="heartRate" column="heart_rate"/>
		<result property="temperature" column="temperature"/>
		<result property="icterus" column="icterus"/>
		<result property="password" column="password"/>
		<result property="inHospitalTime" column="in_hospital_time"/>
		<result property="outHospitalTime" column="out_hospital_time"/>
		<result property="number" column="number"/>
		<result property="bedNumber" column="bed_number"/>
		<result property="age" column="age"/>
		<result property="type" column="type"/>
		<result property="leve" column="leve"/>
		<result property="createTime" column="create_time"/>
		<result property="customerId" column="customer_id"/>
	</resultMap>	

	<!-- 家长信息 -->
	<select id="list2" parameterType="java.util.HashMap" resultMap="CUSTOMERDTO_RESULT">
		select c.password,c.id,c.name,c.sex,c.phone,c.address,c.weight,c.parent_id,c.is_deleted from customer_base c 
		left join customer_child_device ccd on ccd.customer_id = c.id and ccd.is_deleted = 1
		where c.parent_id =0 and c.is_deleted = 1 
	</select>
	
	<!-- 根据家长的id得到他们孩子的信息 -->
	<select id="listById" parameterType="java.util.HashMap" resultMap="CUSTOMERDTO_RESULT">
		select distinct m.* from(
			select c.password,c.id,c.name,c.born_time,c.sex,c.phone,c.address,c.parent_id,c.age,c.bed_number,c.in_hospital_time,c.leve,c.type,c.out_hospital_time,c.number,
      		c1.children_device_number as deviceNumber,c2.blood_type,c2.blood_pre,c2.heart_rate,c2.icterus,c2.temperature,c2.weight,
			c3.heart_rate newHeartRate,c3.icterus newIcterus,c3.temperature newTemperature,c3.weight newWeight,c3.blood_pre newBloodPre
			from customer_base c 
			left join customer_child_device c1 on c1.children_id = c.id and c1.id in(select max(id) from customer_child_device where children_id=c.id and is_deleted=1) and c1.is_deleted = 1 
			left join child_health c2 on c2.customer_id = c.id and c2.id in(select min(id) from child_health where customer_id=c.id and is_deleted=1) and c2.is_deleted = 1
			left join child_health c3 on c3.customer_id = c.id and c3.id in(select max(id) from child_health where customer_id=c.id and is_deleted=1) and c3.is_deleted =1
			where c.id in(
				select children_id from customer_child_device c2 where c2.customer_id = #{id} and c2.is_deleted=1
				)and c.is_deleted=1 
		) m
		group by m.deviceNumber
	</select>
	
	<select id="childList" parameterType="java.util.HashMap" resultMap="CUSTOMERDTO_RESULT">
		select DISTINCT m.* from(
			select c.password,c.id,c.name,c.born_time,c.sex,c.phone,c.address,c.parent_id,c.age,c.bed_number,c.in_hospital_time,c.leve,c.type,c.out_hospital_time,c.number,
			c1.children_device_number as deviceNumber,c2.blood_type,c2.blood_pre,c2.heart_rate,c2.icterus,c2.temperature,c2.weight,
			c3.heart_rate newHeartRate,c3.icterus newIcterus,c3.temperature newTemperature,c3.weight newWeight,c3.blood_pre newBloodPre,c3.create_time,c1.customer_id
			from customer_base c 
			left join customer_child_device c1 on c1.children_id = c.id and c1.id in(select max(id) from customer_child_device where children_id=c.id and is_deleted=1) and c1.is_deleted = 1
			left join child_health c2 on c2.customer_id = c.id and c2.id in(select min(id) from child_health where customer_id=c.id and is_deleted=1) and c2.is_deleted = 1
			left join child_health c3 on c3.customer_id = c.id and c3.id in(select max(id) from child_health where customer_id=c.id and is_deleted=1) and c3.is_deleted =1
			where c.is_deleted=1 and c.parent_id !=0
		) m where 1=1 
		<if test="name != null and name != ''">
			<![CDATA[ and c.name like CONCAT('%',#{name},'%')]]>
		</if>
		<if test="deviceNumber != null and deviceNumber != ''">
			<![CDATA[ and m.deviceNumber like CONCAT('%',#{deviceNumber},'%')]]>
		</if>
		<if test="phone != null and phone != ''">
			<![CDATA[ and c.phone like CONCAT('%',#{phone},'%')]]>
		</if>
		<if test="startTime != null and startTime != ''">
			<![CDATA[ and DATE_FORMAT(c.born_time, '%Y-%m-%d') >=  DATE_FORMAT(#{startTime}, '%Y-%m-%d')]]>
		</if>
		<if test="endTime != null and endTime !=''">
			<![CDATA[ and DATE_FORMAT(c.born_time, '%Y-%m-%d') <=  DATE_FORMAT(#{endTime}, '%Y-%m-%d')]]>
		</if>
		
		group by m.id
	</select>
	
	<!-- 家长列表信息 -->
	<select id="list" parameterType="java.util.HashMap" resultMap="CUSTOMERDTO_RESULT">
		select distinct m.* from(
			select c.password,c.id,c.name,c.born_time,c.sex,c.phone,c.address,c.parent_id,c.age,c.bed_number,c.in_hospital_time,c.leve,c.type,c.out_hospital_time,c.number,
			c1.customer_device_number as deviceNumber,c2.blood_type,c2.blood_pre,c2.heart_rate,c2.icterus,c2.temperature,c2.weight,
			c3.heart_rate newHeartRate,c3.icterus newIcterus,c3.temperature newTemperature,c3.weight newWeight,c3.blood_pre newBloodPre,c3.create_time
			from customer_base c 
			left join customer_child_device c1 on c1.customer_id = c.id and c1.id in(select max(id) from customer_child_device where customer_id=c.id and is_deleted=1) and c1.is_deleted = 1
			left join child_health c2 on c2.customer_id = c.id and c2.id in(select min(id) from child_health where customer_id=c.id and is_deleted=1) and c2.is_deleted = 1
			left join child_health c3 on c3.customer_id = c.id and c3.id in(select max(id) from child_health where customer_id=c.id and is_deleted=1) and c3.is_deleted =1
			where c.is_deleted = 1 and c.parent_id=0
		)m where 1=1
		<if test="id != null and id != ''">
			<![CDATA[ and m.id=#{id}]]>
		</if> 
	  	<if test="name != null and name != ''">
			<![CDATA[ and m.name like CONCAT('%',#{name},'%')]]>
		</if>
		<if test="deviceNumber != null and deviceNumber != ''">
			<![CDATA[ and m.deviceNumber like CONCAT('%',#{deviceNumber},'%')]]>
		</if>
		<if test="phone != null and phone != ''">
			<![CDATA[ and m.phone like CONCAT('%',#{phone},'%')]]>
		</if>
		<if test="startTime != null and startTime != ''">
			<![CDATA[ and DATE_FORMAT(m.born_time, '%Y-%m-%d') >=  DATE_FORMAT(#{startTime}, '%Y-%m-%d')]]>
		</if>
		<if test="endTime != null and endTime !=''">
			<![CDATA[ and DATE_FORMAT(m.born_time, '%Y-%m-%d') <=  DATE_FORMAT(#{endTime}, '%Y-%m-%d')]]>
		</if>
	  group by m.id 	
	  order by m.create_time desc,m.id desc
	   <if test="rowStart !=null and pageSize !=null">
	   		limit #{rowStart},#{pageSize}
	   </if>
	</select>
	
	<!-- 家长详情列表信息 -->
	<select id="list3" parameterType="java.util.HashMap" resultMap="CUSTOMERDTO_RESULT">
	select distinct m.* from (
		select c. password,c.id,c. name,c.born_time,c.sex,c.phone,c.address,c.parent_id,c.in_hospital_time,c.out_hospital_time,c.weight,c.bed_number,
			c.age,c.blood_type,c.number,c.type,c.leve,c1.customer_device_number as devicenumber,c1.children_id
		from customer_base c
		left join customer_child_device c1 on c1.customer_id = c.id and c1.is_deleted = 1
		where c.is_deleted = 1 and c.parent_id = 0 and c.id = #{id}
		) m
	group by m.id
	</select>
	
	<!-- 孩子详情列表信息 -->
	<select id="list3ById" parameterType="java.util.HashMap" resultMap="CUSTOMERDTO_RESULT">
		select c. password,c2.id,c2.name,c2.born_time,c2.sex,c.phone,c2.address,c2.parent_id,c2.in_hospital_time,c2.out_hospital_time,c2.weight,c2.bed_number,
		c2.age,c2.blood_type,c2.number,c2.type,c2.leve,c1.children_device_number as devicenumber
		from customer_base c
		left join customer_child_device c1 on c1.customer_id = c.id and c1.is_deleted = 1
		left join customer_base c2 on c2.id = c1.children_id and c2.is_deleted = 1
		where c.is_deleted = 1  and c.id = #{id}
	</select>
	
	<select id="count" resultType="java.lang.Long" parameterType="java.util.HashMap">
		select count(d.id) from(
		select distinct m.* from(
			select c.password,c.id,c.name,c.born_time,c.sex,c.phone,c.address,c.parent_id,c.age,c.bed_number,c.in_hospital_time,c.leve,c.type,c.out_hospital_time,c.number,
			c1.customer_device_number as deviceNumber,c2.blood_type,c2.blood_pre,c2.heart_rate,c2.icterus,c2.temperature,c2.weight,
			c3.heart_rate newHeartRate,c3.icterus newIcterus,c3.temperature newTemperature,c3.weight newWeight,c3.blood_pre newBloodPre,c3.create_time
			from customer_base c 
			left join customer_child_device c1 on c1.customer_id = c.id and c1.id in(select max(id) from customer_child_device where customer_id=c.id and is_deleted=1) and c1.is_deleted = 1
			left join child_health c2 on c2.customer_id = c.id and c2.id in(select min(id) from child_health where customer_id=c.id and is_deleted=1) and c2.is_deleted = 1
			left join child_health c3 on c3.customer_id = c.id and c3.id in(select max(id) from child_health where customer_id=c.id and is_deleted=1) and c3.is_deleted =1
			where c.is_deleted = 1 and c.parent_id=0
		)m where 1=1
		<if test="id != null and id != ''">
			<![CDATA[ and m.id=#{id}]]>
		</if> 
	  	<if test="name != null and name != ''">
			<![CDATA[ and m.name like CONCAT('%',#{name},'%')]]>
		</if>
		<if test="deviceNumber != null and deviceNumber != ''">
			<![CDATA[ and m.deviceNumber like CONCAT('%',#{deviceNumber},'%')]]>
		</if>
		<if test="phone != null and phone != ''">
			<![CDATA[ and m.phone like CONCAT('%',#{phone},'%')]]>
		</if>
		<if test="startTime != null and startTime != ''">
			<![CDATA[ and DATE_FORMAT(m.born_time, '%Y-%m-%d') >=  DATE_FORMAT(#{startTime}, '%Y-%m-%d')]]>
		</if>
		<if test="endTime != null and endTime !=''">
			<![CDATA[ and DATE_FORMAT(m.born_time, '%Y-%m-%d') <=  DATE_FORMAT(#{endTime}, '%Y-%m-%d')]]>
		</if>
		)d where 1=1
	</select>
</mapper>