<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.hz.yisheng.handchain.dao.CustomerDeviceMapper">
	<resultMap type="com.hz.yisheng.handchain.orm.CustomerDevice" id="CUSTOMER_DEVICE_RESULT">
		<id property="id" column="id"/>
		<result property="type" column="type"/>
		<result property="number" column="number"/>
		<result property="status" column="status"/>
		<result property="creator" column="creator"/>
		<result property="createTime" column="create_time"/>
		<result property="updater" column="updater"/>
		<result property="updateTime" column="update_time"/>
		<result property="isDeleted" column="is_deleted"/>
	</resultMap>	
	
	<sql id="CUSTOMER_DEVICE_SQL">
		type,number,status,creator,create_time,updater,update_time,is_deleted
	</sql>
	
	<insert id="insert" parameterType="com.hz.yisheng.handchain.orm.CustomerDevice" useGeneratedKeys="true" keyProperty="id"  keyColumn="id">
		insert into customer_device(id,<include refid="CUSTOMER_DEVICE_SQL"/>) 
		values(id,#{type},#{number},#{status},#{creator},now(),#{updater},#{updateTime},1)
	</insert>
	
	<select id="list" parameterType="java.util.HashMap" resultMap="CUSTOMER_DEVICE_RESULT">
		select * from(	
			select distinct * from(
				select d.id,d.type,d.number,d.status,d.creator,d.create_time,d.updater,d.update_time,b.`name`,c.id as cid from customer_device d
				inner join customer_child_device c on c.children_device_number = d.number and c.id =(select max(id) from customer_child_device where children_device_number = d.number and is_deleted=1) and c.is_deleted=1
				left join customer_base b on b.id = c.children_id	
				where d.is_deleted=1
			union 
				select d1.id,d1.type,d1.number,d1.status,d1.creator,d1.create_time,d1.updater,d1.update_time,b2.`name`,c2.id as cid from customer_device d1
				inner join customer_child_device c2 on c2.customer_device_number = d1.number and c2.id =(select max(id) from customer_child_device where customer_device_number = d1.number and is_deleted=1) and c2.is_deleted=1
				left join customer_base b2 on b2.id = c2.customer_id
				where d1.is_deleted = 1
			)n 
			where 1=1 
			group by n.number 
		)m where 1=1
		<if test="id != null">
			<![CDATA[ and m.id =#{id}]]>
		</if>
		<if test="type != null">
			<![CDATA[ and m.type =#{type}]]>
		</if>
		<if test="number != null and number != ''">
			<![CDATA[ and m.number LIKE CONCAT('%',#{number},'%')]]>
		</if>
		<if test="name != null and name != ''">
			<![CDATA[ and m.name LIKE CONCAT('%',#{name},'%')]]>
		</if>
		<if test="status != null and status != ''">
			<![CDATA[ and m.status =#{status}]]>
		</if>
		order by m.create_time desc,m.id desc
		<if test="rowStart!=null and pageSize!=null">
			<![CDATA[limit #{rowStart},#{pageSize}]]>
		</if> 
	</select>
	<select id="count" resultType="java.lang.Long" parameterType="java.util.HashMap">
		select count(m.id) from(	
			select distinct * from(
				select d.id,d.type,d.number,d.status,d.creator,d.create_time,d.updater,d.update_time,b.`name`,c.id as cid from customer_device d
				inner join customer_child_device c on c.children_device_number = d.number and c.id =(select max(id) from customer_child_device where children_device_number = d.number and is_deleted=1) and c.is_deleted=1
				left join customer_base b on b.id = c.children_id	
				where d.is_deleted=1
			union 
				select d1.id,d1.type,d1.number,d1.status,d1.creator,d1.create_time,d1.updater,d1.update_time,b2.`name`,c2.id as cid from customer_device d1
				inner join customer_child_device c2 on c2.customer_device_number = d1.number and c2.id =(select max(id) from customer_child_device where customer_device_number = d1.number and is_deleted=1) and c2.is_deleted=1
				left join customer_base b2 on b2.id = c2.customer_id
				where d1.is_deleted = 1
			)n 
			where 1=1 
			group by n.number 
		)m where 1=1
		<if test="id != null">
			<![CDATA[ and m.id =#{id}]]>
		</if>
		<if test="type != null">
			<![CDATA[ and m.type =#{type}]]>
		</if>
		<if test="number != null and number != ''">
			<![CDATA[ and m.number LIKE CONCAT('%',#{number},'%')]]>
		</if>
		<if test="name != null and name != ''">
			<![CDATA[ and m.name LIKE CONCAT('%',#{name},'%')]]>
		</if>
		<if test="status != null and status != ''">
			<![CDATA[ and m.status =#{status}]]>
		</if>
		<if test="rowStart!=null and pageSize!=null">
			<![CDATA[limit #{rowStart},#{pageSize}]]>
		</if> 
	</select>
	
	<select id="deviceUse" parameterType="java.util.HashMap" resultMap="CUSTOMER_DEVICE_RESULT">
		select m.*,b.`name` from (
		select DISTINCT customer_id as uid,create_time from customer_child_device where customer_device_number =#{num} GROUP BY customer_id
		 union 
		select DISTINCT children_id as uid,create_time from customer_child_device where children_device_number=#{num} GROUP BY customer_id
		)m
		left join customer_base b on b.id = m.uid and b.is_deleted=1
		where 1=1 
		order by m.create_time desc,m.uid desc
	</select>
	
	<select id="findDeviceIdBy" resultType="String">
		select id from customer_device where number=#{deviceNo}
	</select>
	
</mapper>